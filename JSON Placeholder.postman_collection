{
	"info": {
		"_postman_id": "7e36e8c3-3479-4b7f-80e6-1ac2828e1bc7",
		"name": "JSON Placeholder",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39476935"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "[Get] JSON Placeholder posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let resBody;\r",
									"resBody = pm.response.json();\r",
									"\r",
									"pm.test(\"100 posts?\", function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    pm.expect(resBody.length).eql(100); // Dlugosc jest równe 100\r",
									"})\r",
									"\r",
									"pm.test(\"Check body in id:1 and text\", function(){\r",
									"    pm.expect(resBody).to.have.property(1)\r",
									"    //console.log(\"tablica:\", resBody[1]) // Wyszukanie obiektu z tablicy, który ma id = 1\r",
									"    let obj = resBody.find(item => item.id === 1); // Wyszukanie obiektu z tablicy, który ma id = 1 | Drugi sposób\r",
									"    //console.log(\"obj:\", obj)\r",
									"    pm.expect(obj.body).to.include(\"quia et suscipit\"); // Sprawdza czy \"body\" z zapisanego obiektu zawiera tekst\r",
									"    pm.expect(resBody[0].body).to.include(\"quia et suscipit\"); // Sprawdza czy \"body\" z zapisanego obiektu zawiera tekst | Drugi sposob\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "[Get] JSON Placeholder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}",
							"host": [
								"{{baseUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[GET] JSON Placeholder time respone",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "[POST] New record",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let howManyPosts;\r",
									"howManyPosts = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Post added\", function(){\r",
									"    pm.expect(howManyPosts.id).to.be.above(100) // id zmiennej howManyPosts jest większy niż 100\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "[DELETE] Delete post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"/* Save an response from enquiry\r",
					"resBody = pm.response.json();\r",
					"console.log(resBody)\r",
					"*/\r",
					"\r",
					"pm.test(\"Respone code: 200 or 201\", function(){\r",
					"    pm.expect(pm.response.code).to.be.oneOf([200,201]); // Kod odpowiedzi to 200 bądź 201\r",
					"})\r",
					"\r",
					"pm.test(\"Respone time: <100ms\"), function(){\r",
					"    pm.expect(pm.response.responseTime).to.be.below(100); // Czas odpowiedzi jest mniejszy niz 100ms\r",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl1",
			"value": "https://jsonplaceholder.typicode.com/",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "",
			"type": "default"
		}
	]
}